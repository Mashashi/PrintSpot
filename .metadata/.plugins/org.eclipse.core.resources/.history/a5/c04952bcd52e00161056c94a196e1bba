package de.database.insert;

import java.io.Serializable;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;

import javax.naming.InitialContext;
import javax.naming.NamingException;

import de.PoliciesRemote;
import de.ValidationException;


public class Customer implements Serializable{
	
	/*
	This as to be on the remote class and here or else a
	java.rmi.MarshalException: CORBA MARSHAL 1330446347 Maybe; nested exception is: 
	org.omg.CORBA.MARSHAL: ----------BEGIN server-side stack trace----------
	org.omg.CORBA.MARSHAL: WARNING: 00810011: Exception from readValue on ValueHandler in CDRInputStream  vmcid: OMG  minor code: 11 completed: Maybe
	...
	Exception is thrown
	
	For some reason some classes don't require this just the serializable
	 */
	private static final long serialVersionUID = 1754316980605977737L;
	
	public String name;
	public String email;
	public String birthday;
	public String address;
	public String tax_num;
	
	public Customer(String name, String email, String birthday, String address, String tax_num) {
		this.name = name;
		this.email = email;
		this.birthday = birthday;
		this.address = address;
		this.tax_num = tax_num;
	}
	
	public void validate() throws ValidationException {
		try {
			
			PoliciesRemote policies = (PoliciesRemote) InitialContext.doLookup("java:global/Policies/Defined");
			
			StringBuffer report = new StringBuffer("");
			try {
				Date parsed = policies.parseDate(birthday);
				i = Calendar.getInstance();
//				if(Calendar.getInstance().getTime().compareTo()<0){
//					report.append("User must be 18 or older");
//				}
			} catch (ParseException e) {
				policies.parseError(report, "birthday", birthday);
			}
			
			if(!report.toString().equals("")) 
				throw new ValidationException(report);
			
		} catch (NamingException e) {
			throw new RuntimeException(e);
		}
	}
}
